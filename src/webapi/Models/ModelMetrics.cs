// Copyright (c) 2023 Drew Robbins
// SPDX-License-Identifier: MIT
namespace RecipeGen.Models;

public class ModelMetrics
{
    /// <summary>
    /// The prompt template name that was used to generate the Recipe.
    /// </summary>
    public string Prompt { get; set; } = null!;
    /// <summary>
    /// The Generative AI model that was used to generate the Recipe.
    /// </summary>
    public string Model { get; set; } = null!;
    /// <summary>
    /// The maximum number of tokens that were allowd in the AI model.
    /// </summary>
    public int MaxTokens { get; set; }
    /// <summary>
    /// The frequency penalty that was used in the AI model.
    /// </summary>
    public double FrequencyPenalty { get; set; }
    /// <summary>
    /// The presence penalty that was used in the AI model.
    /// </summary>
    public double PresencePenalty { get; set; }
    /// <summary>
    /// The temperature that was used in the AI model.
    /// </summary>
    public double Temperature { get; set; }
    /// <summary>
    /// The length in bytes of the Prompt that was sent to the AI model.
    /// </summary>
    public int PromptLength { get; set; }
    /// <summary>
    /// The length in bytes of the Recipe that was generated by the AI model.
    /// </summary>
    public int RecipeLength { get; set; }
    /// <summary>
    /// The number of tokens that were used in the Prompt.
    /// </summary>
    public int PromptTokens { get; set; }
    /// <summary>
    /// The number of tokens that were used in the Completions.
    /// </summary>
    public int CompletionTokens { get; set; }
    /// <summary>
    /// The reason the model stopped generating tokens. 'stop' is normal, 'length'
    /// means the model ran out of tokens.
    /// </summary>
    public string FinishReason { get; set; } = null!;
    /// <summary>
    /// The number of milliseconds it took to generate the Recipe.
    /// </summary>
    public long TimeTaken { get; set; }

    public override string ToString()
    {
        return $"Prompt: {Prompt}, Model: {Model}, MaxTokens: {MaxTokens}, " +
               $"FrequencyPenalty: {FrequencyPenalty}, PresencePenalty: {PresencePenalty}, " +
               $"Temperature: {Temperature}, PromptLength: {PromptLength}, " +
               $"RecipeLength: {RecipeLength}, PromptTokens: {PromptTokens}, " +
               $"CompletionTokens: {CompletionTokens}, FinishReason: {FinishReason}, " +
               $"TimeTaken: {TimeTaken}";
    }
}
